// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.2.1
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CGSpecFlowBVT.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.2.1")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ServiceRequestFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ServiceRequest.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ServiceRequest", "In order to manage Service Request tickets\r\nAs a CGWeb user\r\nI want to be able to" +
                    " create, delete and do various things with Service Request tickets", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "ServiceRequest")))
            {
                CGSpecFlowBVT.FeatureFiles.ServiceRequestFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create a Service Request ticket of type Access Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServiceRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void CreateAServiceRequestTicketOfTypeAccessRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Service Request ticket of type Access Request", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am logged in to ChangeGear Web", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("I am on the Service Request module page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.When("I click on the new button in the action bar and select Access Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table1.AddRow(new string[] {
                        "Summary",
                        "This is my Access Request ticket"});
            table1.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table1.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table1.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table1.AddRow(new string[] {
                        "System",
                        "CRM"});
            table1.AddRow(new string[] {
                        "AccessLevel",
                        "Super User"});
            table1.AddRow(new string[] {
                        "AccessLocation",
                        "Home Office"});
#line 13
 testRunner.And("I enter the following Service Request data into the new Access Request form:", ((string)(null)), table1, "And ");
#line 23
 testRunner.And("I Submit the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I click OK on the comment popup window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I close the ticket window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I click on the All Open Requests view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I open the newest ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table2.AddRow(new string[] {
                        "Summary",
                        "This is my Access Request ticket"});
            table2.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table2.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table2.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table2.AddRow(new string[] {
                        "System",
                        "CRM"});
            table2.AddRow(new string[] {
                        "AccessLevel",
                        "Super User"});
            table2.AddRow(new string[] {
                        "AccessLocation",
                        "Home Office"});
#line 28
 testRunner.Then("The ticket should display the correct Service Request data of type Access Request" +
                    "", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create a Service Request ticket of type General Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServiceRequest")]
        public virtual void CreateAServiceRequestTicketOfTypeGeneralRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Service Request ticket of type General Request", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I am logged in to ChangeGear Web", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And("I am on the Service Request module page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I click on the new button in the action bar and select General Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table3.AddRow(new string[] {
                        "Summary",
                        "This is my General Request ticket"});
            table3.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table3.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table3.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
#line 45
 testRunner.And("I enter the following Service Request data into the new General Request form:", ((string)(null)), table3, "And ");
#line 52
 testRunner.And("I Submit the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I click OK on the comment popup window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I close the ticket window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I click on the All Open Requests view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I open the newest ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table4.AddRow(new string[] {
                        "Summary",
                        "This is my General Request ticket"});
            table4.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table4.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table4.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
#line 57
 testRunner.Then("The ticket should display the correct Service Request data of type General Reques" +
                    "t", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create a Service Request ticket of type Hardware Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServiceRequest")]
        public virtual void CreateAServiceRequestTicketOfTypeHardwareRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Service Request ticket of type Hardware Request", ((string[])(null)));
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("I am logged in to ChangeGear Web", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.And("I am on the Service Request module page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.When("I click on the new button in the action bar and select Hardware Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table5.AddRow(new string[] {
                        "Summary",
                        "This is my Hardware Request ticket"});
            table5.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table5.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table5.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table5.AddRow(new string[] {
                        "HardwareType",
                        "Laptop Computer"});
            table5.AddRow(new string[] {
                        "OperatingSystem",
                        "MAC OS"});
#line 71
 testRunner.And("I enter the following Service Request data into the new Hardware Request form:", ((string)(null)), table5, "And ");
#line 80
 testRunner.And("I Submit the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I click OK on the comment popup window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I close the ticket window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I click on the All Open Requests view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I open the newest ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table6.AddRow(new string[] {
                        "Summary",
                        "This is my Hardware Request ticket"});
            table6.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table6.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table6.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table6.AddRow(new string[] {
                        "HardwareType",
                        "Laptop Computer"});
            table6.AddRow(new string[] {
                        "OperatingSystem",
                        "MAC OS"});
#line 85
 testRunner.Then("The ticket should display the correct Service Request data of type Hardware Reque" +
                    "st", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create a Service Request ticket of type Move Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServiceRequest")]
        public virtual void CreateAServiceRequestTicketOfTypeMoveRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Service Request ticket of type Move Request", ((string[])(null)));
#line 95
this.ScenarioSetup(scenarioInfo);
#line 96
 testRunner.Given("I am logged in to ChangeGear Web", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 97
 testRunner.And("I am on the Service Request module page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.When("I click on the new button in the action bar and select Move Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table7.AddRow(new string[] {
                        "Summary",
                        "This is my Move Request ticket"});
            table7.AddRow(new string[] {
                        "EmployeeName",
                        "Mr. Employee"});
            table7.AddRow(new string[] {
                        "EmployeeType",
                        "Regular"});
            table7.AddRow(new string[] {
                        "Position",
                        "Software Developer"});
            table7.AddRow(new string[] {
                        "CurrentCubeOrOffice",
                        "46B"});
            table7.AddRow(new string[] {
                        "NewCubeOrOffice",
                        "25C"});
            table7.AddRow(new string[] {
                        "CurrentPhoneExt",
                        "546"});
            table7.AddRow(new string[] {
                        "NewPhoneExt",
                        "436"});
            table7.AddRow(new string[] {
                        "CurrentLocation",
                        "Europe:United Kingdom:London"});
            table7.AddRow(new string[] {
                        "NewLocation",
                        "Australia:Sydney"});
#line 101
 testRunner.And("I enter the following Service Request data into the new Move Request form:", ((string)(null)), table7, "And ");
#line 114
 testRunner.And("I Submit the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("I click OK on the comment popup window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I close the ticket window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("I click on the All Open Requests view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("I open the newest ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table8.AddRow(new string[] {
                        "Summary",
                        "This is my Move Request ticket"});
            table8.AddRow(new string[] {
                        "EmployeeName",
                        "Mr. Employee"});
            table8.AddRow(new string[] {
                        "EmployeeType",
                        "Regular"});
            table8.AddRow(new string[] {
                        "Position",
                        "Software Developer"});
            table8.AddRow(new string[] {
                        "CurrentCubeOrOffice",
                        "46B"});
            table8.AddRow(new string[] {
                        "NewCubeOrOffice",
                        "25C"});
            table8.AddRow(new string[] {
                        "CurrentPhoneExt",
                        "546"});
            table8.AddRow(new string[] {
                        "NewPhoneExt",
                        "436"});
            table8.AddRow(new string[] {
                        "CurrentLocation",
                        "Europe:United Kingdom:London"});
            table8.AddRow(new string[] {
                        "NewLocation",
                        "Australia:Sydney"});
#line 119
 testRunner.Then("The ticket should display the correct Service Request data of type Move Request", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create a Service Request ticket of type Software Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServiceRequest")]
        public virtual void CreateAServiceRequestTicketOfTypeSoftwareRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Service Request ticket of type Software Request", ((string[])(null)));
#line 133
this.ScenarioSetup(scenarioInfo);
#line 134
 testRunner.Given("I am logged in to ChangeGear Web", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
 testRunner.And("I am on the Service Request module page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.When("I click on the new button in the action bar and select Software Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table9.AddRow(new string[] {
                        "Summary",
                        "This is my Software Request ticket"});
            table9.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table9.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table9.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table9.AddRow(new string[] {
                        "RequestedSoftware",
                        "Microsoft Office"});
            table9.AddRow(new string[] {
                        "OperatingSystem",
                        "Windows 7"});
#line 139
 testRunner.And("I enter the following Service Request data into the new Software Request form:", ((string)(null)), table9, "And ");
#line 148
 testRunner.And("I Submit the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I click OK on the comment popup window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I close the ticket window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I click on the All Open Requests view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I open the newest ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table10.AddRow(new string[] {
                        "Summary",
                        "This is my Software Request ticket"});
            table10.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table10.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table10.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table10.AddRow(new string[] {
                        "RequestedSoftware",
                        "Microsoft Office"});
            table10.AddRow(new string[] {
                        "OperatingSystem",
                        "Windows 7"});
#line 153
 testRunner.Then("The ticket should display the correct Service Request data of type Software Reque" +
                    "st", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create a Service Request ticket of type Training Request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServiceRequest")]
        public virtual void CreateAServiceRequestTicketOfTypeTrainingRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Service Request ticket of type Training Request", ((string[])(null)));
#line 163
this.ScenarioSetup(scenarioInfo);
#line 164
 testRunner.Given("I am logged in to ChangeGear Web", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 165
 testRunner.And("I am on the Service Request module page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.When("I click on the new button in the action bar and select Training Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table11.AddRow(new string[] {
                        "Summary",
                        "This is my Training Request ticket"});
            table11.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table11.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table11.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table11.AddRow(new string[] {
                        "CourseName",
                        "Javascript for Beginners"});
            table11.AddRow(new string[] {
                        "ProgramType",
                        "Employee Development"});
            table11.AddRow(new string[] {
                        "TrainingLevel",
                        "Basic"});
            table11.AddRow(new string[] {
                        "CourseCost",
                        "$100.00"});
#line 169
 testRunner.And("I enter the following Service Request data into the new Training Request form:", ((string)(null)), table11, "And ");
#line 180
 testRunner.And("I Submit the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("I click OK on the comment popup window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("I close the ticket window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I click on the All Open Requests view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("I open the newest ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Requester",
                        "Bob Johnson"});
            table12.AddRow(new string[] {
                        "Summary",
                        "This is my Training Request ticket"});
            table12.AddRow(new string[] {
                        "Urgency",
                        "2 - High"});
            table12.AddRow(new string[] {
                        "Impact",
                        "3 - Minor"});
            table12.AddRow(new string[] {
                        "Priority",
                        "4 - Low"});
            table12.AddRow(new string[] {
                        "CourseName",
                        "Javascript for Beginners"});
            table12.AddRow(new string[] {
                        "ProgramType",
                        "Employee Development"});
            table12.AddRow(new string[] {
                        "TrainingLevel",
                        "Basic"});
            table12.AddRow(new string[] {
                        "CourseCost",
                        "$100.00"});
#line 185
 testRunner.Then("The ticket should display the correct Service Request data of type Training Reque" +
                    "st", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
